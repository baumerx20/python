import PyPDF2
import csv

#PDF Malware Checker for 

# TODO
# Add Args
# Add Hash identifier


# Example malware signatures associated with PDFs
malware_signatures = [
    "/JS",  # JavaScript
    "/JavaScript",
    "/AA",  # OpenAction
    "/OpenAction",
    "/AcroForm",  # AcroForm
    "/EmbeddedFile",  # Embedded files
    "/Launch",  # Launch action
    "/RichMedia",  # Rich Media
    "/RichMediaContent",  # Rich Media Content
    "/XFA",  # XFA Forms
    "/URI",  # URI Actions
    "/Annot",  # Annotations
    "/Annots",  # Annotations
    "/Names",  # Names dictionary
    "/EmbeddedFiles",  # Embedded files in Names dictionary
    "/FileSpec",  # File specifications
    "/SubmitForm",  # SubmitForm action
    "/GoToR",  # Remote GoTo action
    "/GoToE",  # Embedded GoTo action
    "/ResetForm",  # ResetForm action
    "/ImportData"  # ImportData action
]

def check_pdf_for_malware(pdf_path):
    results = []
    try:
        with open(pdf_path, 'rb') as file:
            reader = PyPDF2.PdfReader(file)
            num_pages = len(reader.pages)
            for i in range(num_pages):
                page = reader.pages[i]
                try:
                    page_content = page.extract_text() or ""
                except:
                    page_content = ""
                
                page_result = {"page": i + 1, "malware_detected": False, "signatures": []}
                for signature in malware_signatures:
                    if signature in page_content:
                        page_result["malware_detected"] = True
                        page_result["signatures"].append(signature)
                
                # Also check for signatures in page objects
                if not page_result["malware_detected"]:
                    page_objects = str(page).lower()
                    for signature in malware_signatures:
                        if signature.lower() in page_objects:
                            page_result["malware_detected"] = True
                            page_result["signatures"].append(signature)
                
                results.append(page_result)
    except PyPDF2.errors.PdfReadError as e:
        print(f"Error reading PDF file: {e}")
        results.append({"page": "N/A", "malware_detected": "Error", "signatures": [str(e)]})
    except Exception as e:
        print(f"An unexpected error occurred: {e}")
        results.append({"page": "N/A", "malware_detected": "Error", "signatures": [str(e)]})
    return results

def write_results_to_csv(results, csv_path):
    with open(csv_path, mode='w', newline='') as file:
        writer = csv.writer(file)
        writer.writerow(["Page", "Malware Detected", "Signatures"])
        for result in results:
            writer.writerow([result["page"], result["malware_detected"], ", ".join(result["signatures"])])

pdf_path = "/Users/dix/Projects/python/PenTools/harmless_malware_sample.pdf" 
csv_path = "/Users/dix/Projects/python/PenTools/malware_scan_results.csv"  

results = check_pdf_for_malware(pdf_path)
write_results_to_csv(results, csv_path)

print(results)

print(f"Malware scan results have been written to {csv_path}")